file,riga,descrizione
preview_engine.py,3,Importa il modulo 'tkinter'
preview_engine.py,4,Importa il simbolo 'ttk' da 'tkinter'
preview_engine.py,5,Importa il modulo 'webbrowser'
preview_engine.py,6,Importa il modulo 'tempfile'
preview_engine.py,7,Importa il simbolo 'StyledText' da 'ui_utils'
preview_engine.py,10,Avvia il blocco 'try'
preview_engine.py,11,Importa il simbolo 'HtmlFrame' da 'tkinterweb'
preview_engine.py,12,Gestisce l'eccezione 'ImportError'
preview_engine.py,13,Assegna valore alla variabile 'HtmlFrame'
preview_engine.py,16,Avvia il blocco 'try'
preview_engine.py,17,Importa il simbolo 'cefpython' da 'cefpython3'
preview_engine.py,18,Gestisce l'eccezione 'ImportError'
preview_engine.py,19,Assegna valore alla variabile 'cef'
preview_engine.py,21,Definisce la classe 'RendererBackend'
preview_engine.py,23,Definisce la funzione '__init__'
preview_engine.py,24,Valuta l'espressione 'self.parent_frame = parent_frame'
preview_engine.py,26,Definisce la funzione 'setup'
preview_engine.py,27,Definisce la funzione 'load'
preview_engine.py,28,Definisce la funzione 'dispose'
preview_engine.py,30,Definisce la classe 'TkWebRenderer'
preview_engine.py,32,Definisce la funzione '__init__'
preview_engine.py,33,Chiama la funzione 'super'
preview_engine.py,34,Valuta l'espressione 'self.html_frame = None'
preview_engine.py,36,Definisce la funzione 'setup'
preview_engine.py,37,Verifica il flag 'not'
preview_engine.py,38,Genera l'eccezione 'RuntimeError' con messaggio 'tkinterweb non disponibile'
preview_engine.py,39,Genera l'istanza 'HtmlFrame' e la assegna a 'self.html_frame'
preview_engine.py,40,Chiama il metodo 'pack' su 'self.html_frame' impostando 'fill'='both' e 'expand'=True
preview_engine.py,42,Definisce la funzione 'load'
preview_engine.py,43,Valuta l'espressione 'self.html_frame.load_html(html)'
preview_engine.py,45,Definisce la funzione 'dispose'
preview_engine.py,46,Verifica il flag 'self'
preview_engine.py,47,Valuta l'espressione 'self.html_frame.destroy()'
preview_engine.py,48,Valuta l'espressione 'self.html_frame = None'
preview_engine.py,50,Definisce la classe 'CefRenderer'
preview_engine.py,52,Assegna valore alla variabile '_initialized'
preview_engine.py,54,Definisce la funzione '__init__'
preview_engine.py,55,Chiama la funzione 'super'
preview_engine.py,56,Valuta l'espressione 'self.browser = None'
preview_engine.py,58,Definisce la funzione 'setup'
preview_engine.py,59,Verifica il flag 'not'
preview_engine.py,60,Genera l'eccezione 'RuntimeError' con messaggio 'cefpython3 non disponibile'
preview_engine.py,61,Verifica il flag 'not'
preview_engine.py,62,Chiama il metodo 'Initialize' su 'cef'
preview_engine.py,63,Valuta l'espressione 'CefRenderer._initialized = True'
preview_engine.py,65,Valuta l'espressione 'self.parent_frame.update_idletasks()'
preview_engine.py,66,Assegna valore alla variabile 'handle'
preview_engine.py,67,Assegna valore alla variabile 'width'
preview_engine.py,68,Assegna valore alla variabile 'height'
preview_engine.py,70,Assegna valore alla variabile 'window_info'
preview_engine.py,71,Chiama il metodo 'SetAsChild' su 'window_info'
preview_engine.py,72,Genera il browser CEF e lo assegna a 'self.browser'
preview_engine.py,73,Imposta il binding dell'evento '<Configure>' su 'self.parent_frame' al metodo '_on_configure'
preview_engine.py,75,Definisce la funzione '_on_configure'
preview_engine.py,76,Verifica il flag 'self'
preview_engine.py,77,"Valuta l'espressione 'self.browser.SetBounds(0, 0, event.width, event.height)'"
preview_engine.py,79,Definisce la funzione 'load'
preview_engine.py,80,Verifica il flag 'self'
preview_engine.py,81,Assegna valore alla variabile 'html_full'
preview_engine.py,82,Assegna valore alla variabile 'low'
preview_engine.py,83,Verifica il flag 'not'
preview_engine.py,84,Assegna valore alla variabile 'html_full'
preview_engine.py,85,Valuta l'espressione '<!DOCTYPE html>'
preview_engine.py,86,Valuta l'espressione '<html><head><meta charset='utf-8'></head><body>'
preview_engine.py,87,Valuta l'espressione 'html_full +'
preview_engine.py,88,Valuta l'espressione '</body></html>'
preview_engine.py,89,Valuta l'espressione ')'
preview_engine.py,90,Chiama il metodo 'LoadString' sul frame principale del browser con parametri 'html_full' e 'about:blank'
preview_engine.py,92,Definisce la funzione 'dispose'
preview_engine.py,93,Verifica il flag 'self'
preview_engine.py,94,Valuta l'espressione 'self.browser.CloseBrowser(True)'
preview_engine.py,95,Valuta l'espressione 'self.browser = None'
preview_engine.py,96,Verifica il flag 'CefRenderer'
preview_engine.py,97,Chiama il metodo 'Shutdown' su 'cef'
preview_engine.py,98,Valuta l'espressione 'CefRenderer._initialized = False'
preview_engine.py,100,Definisce la classe 'ExternalRenderer'
preview_engine.py,102,Definisce la funzione '__init__'
preview_engine.py,103,Chiama la funzione 'super'
preview_engine.py,104,Valuta l'espressione 'self.button = None'
preview_engine.py,105,Imposta l'attributo '_html' a stringa vuota
preview_engine.py,107,Definisce la funzione 'setup'
preview_engine.py,108,Valuta l'espressione 'self.button = ttk.Button('
preview_engine.py,109,"Valuta l'espressione 'self.parent_frame,'"
preview_engine.py,110,Assegna valore alla variabile 'text'
preview_engine.py,111,Assegna valore alla variabile 'command'
preview_engine.py,112,Valuta l'espressione ')'
preview_engine.py,113,"Valuta l'espressione 'self.button.pack(padx=10, pady=10)'"
preview_engine.py,115,Definisce la funzione 'load'
preview_engine.py,116,Valuta l'espressione 'self._html = html'
preview_engine.py,118,Definisce la funzione '_open_in_browser'
preview_engine.py,119,Avvia il blocco 'try'
preview_engine.py,120,Assegna valore alla variabile 'tmp'
preview_engine.py,121,Chiama il metodo 'write' su 'tmp'
preview_engine.py,122,Chiama il metodo 'close' su 'tmp'
preview_engine.py,123,Chiama il metodo 'open_new_tab' su 'webbrowser'
preview_engine.py,124,Gestisce l'eccezione 'Exception' come 'e'
preview_engine.py,125,Chiama la funzione 'show_error'
preview_engine.py,127,Definisce la funzione 'dispose'
preview_engine.py,128,Verifica il flag 'self'
preview_engine.py,129,Valuta l'espressione 'self.button.destroy()'
preview_engine.py,130,Valuta l'espressione 'self.button = None'
preview_engine.py,132,Definisce la classe 'PreviewEngine'
preview_engine.py,134,Valuta l'espressione 'Gestisce il container di anteprima in due tab'
preview_engine.py,135,Valuta l'espressione '(HTML Source & Web Preview) e instrada render().'
preview_engine.py,137,Definisce la funzione '__init__'
preview_engine.py,138,Valuta l'espressione 'self.parent = parent'
preview_engine.py,139,Valuta l'espressione 'self.container = None'
preview_engine.py,140,Valuta l'espressione 'self.source_text = None'
preview_engine.py,141,Valuta l'espressione 'self.renderer = None'
preview_engine.py,143,Definisce la funzione 'init_frame'
preview_engine.py,144,Avvia il blocco 'try'
preview_engine.py,145,"Valuta l'espressione 'self.parent.tk.call('set', 'tcl_platform(threaded)', '0')'"
preview_engine.py,146,Gestisce il blocco 'except'
preview_engine.py,147,Valuta l'espressione 'pass'
preview_engine.py,149,Assegna valore alla variabile 'nb'
preview_engine.py,151,Assegna valore alla variabile 'tab_src'
preview_engine.py,152,Genera il widget 'StyledText' e lo assegna a 'self.source_text'
preview_engine.py,153,Chiama il metodo 'pack' su 'self.source_text' impostando 'fill'='both' e 'expand'=True
preview_engine.py,154,Chiama il metodo 'config' su 'self.source_text' impostando 'state'='disabled'
preview_engine.py,155,Chiama il metodo 'add' su 'nb'
preview_engine.py,157,Assegna valore alla variabile 'tab_web'
preview_engine.py,158,Chiama il metodo 'add' su 'nb'
preview_engine.py,160,Assegna valore alla variabile 'backend'
preview_engine.py,161,Avvia il blocco 'try'
preview_engine.py,162,Verifica il flag 'backend'
preview_engine.py,163,Valuta l'espressione 'self.renderer = TkWebRenderer(tab_web)'
preview_engine.py,164,Verifica una condizione con 'elif'
preview_engine.py,165,Valuta l'espressione 'self.renderer = CefRenderer(tab_web)'
preview_engine.py,166,Gestisce il ramo 'else'
preview_engine.py,167,Valuta l'espressione 'self.renderer = ExternalRenderer(tab_web)'
preview_engine.py,168,Valuta l'espressione 'self.renderer.setup()'
preview_engine.py,169,Gestisce l'eccezione 'Exception' come 'e'
preview_engine.py,170,Assegna valore alla variabile 'msg'
preview_engine.py,171,Verifica una condizione con 'if'
preview_engine.py,172,Chiama la funzione 'show_error'
preview_engine.py,173,Valuta l'espressione 'self.renderer = ExternalRenderer(tab_web)'
preview_engine.py,174,Valuta l'espressione 'self.renderer.setup()'
preview_engine.py,176,Valuta l'espressione 'self.container = nb'
preview_engine.py,177,Restituisce il valore di 'nb'
preview_engine.py,179,Definisce la funzione 'render'
preview_engine.py,180,Assegna valore alla variabile 'low'
preview_engine.py,181,Assegna valore alla variabile 'html_full'
preview_engine.py,182,Verifica il flag 'not'
preview_engine.py,183,Assegna valore alla variabile 'html_full'
preview_engine.py,184,Valuta l'espressione '<!DOCTYPE html>'
preview_engine.py,185,Valuta l'espressione '<html><head><meta charset='utf-8'></head><body>'
preview_engine.py,186,Valuta l'espressione 'html_full +'
preview_engine.py,187,Valuta l'espressione '</body></html>'
preview_engine.py,188,Valuta l'espressione ')'
preview_engine.py,189,Verifica il flag 'self'
preview_engine.py,190,Chiama il metodo 'config' su 'self.source_text' impostando 'state'='normal'
preview_engine.py,191,Chiama il metodo 'delete' su 'self.source_text' con parametri '1.0' e 'end'
preview_engine.py,192,Chiama il metodo 'insert' su 'self.source_text' con parametri '1.0' e 'html_full'
preview_engine.py,193,Chiama il metodo 'config' su 'self.source_text' impostando 'state'='disabled'
preview_engine.py,194,Avvia il blocco 'try'
preview_engine.py,195,Verifica il flag 'self'
preview_engine.py,196,Valuta l'espressione 'self.renderer.load(html_full)'
preview_engine.py,197,Gestisce l'eccezione 'Exception' come 'e'
preview_engine.py,198,Chiama la funzione 'show_error'
preview_engine.py,200,Definisce la funzione 'dispose'
preview_engine.py,201,Verifica il flag 'self'
preview_engine.py,202,Valuta l'espressione 'self.renderer.dispose()'
preview_engine.py,203,Verifica il flag 'self'
preview_engine.py,204,Valuta l'espressione 'self.container.destroy()'
template_builder.py,1,Importa il simbolo 'annotations' da '__future__'
template_builder.py,3,Valuta l'espressione 'Template Builder 2.3 – core module completo'
template_builder.py,4,Valuta l'espressione 'Con:'
template_builder.py,5,Verifica il placeholder 'uniforme'
template_builder.py,6,Valuta l'espressione '- move/up/down e delete in ImageRepeaterField'
template_builder.py,7,Valuta l'espressione '- validazione URL che ignora i placeholder'
template_builder.py,8,"Valuta l'espressione '- supporto a PreviewEngine, quick‐save, smart‐paste, multi‐text formatting, etc.'"
template_builder.py,9,Valuta l'espressione '- Preview tab con sottoviste 'HTML Source' e 'Web Preview''
template_builder.py,11,Importa il modulo 're'
template_builder.py,12,Importa il modulo 'json'
template_builder.py,13,Importa il modulo 'time'
template_builder.py,14,Importa il modulo 'math'
template_builder.py,15,Importa il simbolo 'Path' da 'pathlib'
template_builder.py,16,Importa il simbolo 'Callable' da 'typing'
template_builder.py,18,Importa il modulo 'json'
template_builder.py,20,Importa il modulo 'tkinter'
template_builder.py,22,Importa il modulo 'jinja2'
template_builder.py,23,Avvia il blocco 'try'
template_builder.py,24,Importa il simbolo 'pass_context' da 'jinja2'
template_builder.py,25,Gestisce l'eccezione 'ImportError'
template_builder.py,26,Importa il simbolo 'contextfilter' da 'jinja2'
template_builder.py,29,Importa il modulo 'jinja2'
template_builder.py,32,Avvia il blocco 'try'
template_builder.py,33,Importa il simbolo 'pass_context' da 'jinja2'
template_builder.py,34,Gestisce l'eccezione 'ImportError'
template_builder.py,35,Importa il simbolo 'contextfilter' da 'jinja2'
template_builder.py,38,Applica il decoratore '@pass_context'
template_builder.py,39,Definisce la funzione 'steps_bind'
template_builder.py,41,Valuta l'espressione 'Converte RECIPE_STEPS_TEXT (multilinea) in lista di dict'
template_builder.py,42,"Valuta l'espressione 'e abbina, in ordine, le foto presenti in IMAGES_STEP.'"
template_builder.py,44,"Valuta l'espressione '• IMAGES_STEP può contenere tuple  (src, alt)'"
template_builder.py,45,"Valuta l'espressione 'oppure dict {\'src\': \'...\', \'alt\': \'...\'}'"
template_builder.py,46,"Valuta l'espressione '• Se mancano foto, lo step mostra solo testo.'"
template_builder.py,50,Verifica il flag 'not'
template_builder.py,51,Assegna valore alla variabile 'lines'
template_builder.py,52,Gestisce il ramo 'else'
template_builder.py,53,Assegna valore alla variabile 'raw'
template_builder.py,55,Verifica il flag 'raw'
template_builder.py,56,Assegna valore alla variabile 'raw'
template_builder.py,57,Assegna valore alla variabile 'lines'
template_builder.py,60,Assegna valore alla variabile 'step_imgs'
template_builder.py,61,Importa il modulo 'sys'
template_builder.py,62,Chiama il metodo 'pprint' su 'pprint'
template_builder.py,64,Assegna valore alla variabile 'steps'
template_builder.py,65,Itera con il ciclo 'for'
template_builder.py,66,Assegna valore alla variabile 'src'
template_builder.py,68,Verifica il flag 'i'
template_builder.py,69,Assegna valore alla variabile 'item'
template_builder.py,72,Verifica il flag 'isinstance'
template_builder.py,73,Assegna valore alla variabile 'src'
template_builder.py,74,Assegna valore alla variabile 'alt'
template_builder.py,77,Verifica una condizione con 'elif'
template_builder.py,78,Assegna valore alla variabile 'src'
template_builder.py,79,Assegna valore alla variabile 'alt'
template_builder.py,81,Chiama il metodo 'append' su 'steps'
template_builder.py,83,Restituisce il valore di 'steps'
template_builder.py,87,Valuta l'espressione 'jinja2.defaults.DEFAULT_FILTERS['steps_bind'] = steps_bind'
template_builder.py,91,Importa il modulo 'jinja2'
template_builder.py,92,Valuta l'espressione 'jinja2.defaults.DEFAULT_FILTERS['nl2br'] = lambda v: '<br>'.join(x.strip() for x in (v or '').splitlines())'
template_builder.py,94,Importa il simbolo 'ttk' da 'tkinter'
template_builder.py,95,Importa il simbolo 'Template' da 'jinja2'
template_builder.py,97,Importa il simbolo 'validate_image_url' da 'validators'
template_builder.py,98,Importa il simbolo '(' da 'ui_utils'
template_builder.py,99,"Valuta l'espressione 'styled_option_menu,'"
template_builder.py,100,"Valuta l'espressione 'styled_spinbox,'"
template_builder.py,101,"Valuta l'espressione 'show_info,'"
template_builder.py,102,"Valuta l'espressione 'show_warning,'"
template_builder.py,103,"Valuta l'espressione 'show_error,'"
template_builder.py,104,"Valuta l'espressione 'StyledText,'"
template_builder.py,105,"Valuta l'espressione 'PlaceholderEntry,'"
template_builder.py,106,"Valuta l'espressione 'PlaceholderMultiTextField,'"
template_builder.py,107,Valuta l'espressione ')'
template_builder.py,109,Avvia il blocco 'try'
template_builder.py,110,Importa il simbolo 'PreviewEngine' da 'preview_engine'
template_builder.py,111,Gestisce l'eccezione 'ImportError'
template_builder.py,112,Assegna valore alla variabile 'PreviewEngine'
template_builder.py,115,Assegna valore alla variabile 'BASE_DIR'
template_builder.py,116,Assegna valore alla variabile 'TEMPLATE_FOLDER'
template_builder.py,117,Assegna valore alla variabile 'EXPORT_FOLDER'
template_builder.py,118,Assegna valore alla variabile 'HISTORY_FOLDER'
template_builder.py,119,Itera con il ciclo 'for'
template_builder.py,120,Chiama il metodo 'mkdir' su 'p'
template_builder.py,123,Assegna valore alla variabile 'PLACEHOLDER_REGEX'
template_builder.py,125,Definisce la funzione 'extract_placeholders'
template_builder.py,126,Valuta l'espressione 'return sorted(set(PLACEHOLDER_REGEX.findall(html)))'
template_builder.py,128,Definisce la funzione 'smart_paste'
template_builder.py,129,Verifica il flag 'not'
template_builder.py,130,Valuta l'espressione 'return []'
template_builder.py,131,Assegna valore alla variabile 'lines'
template_builder.py,132,Verifica il flag 'len'
template_builder.py,133,Valuta l'espressione 'return [s.strip() for s in lines[0].split(';') if s.strip()]'
template_builder.py,134,Restituisce il valore di 'lines'
template_builder.py,136,Definisce la funzione 'auto_format'
template_builder.py,137,Verifica il flag 'not'
template_builder.py,138,Valuta l'espressione 'return '''
template_builder.py,139,Verifica una condizione con 'if'
template_builder.py,140,Restituisce il valore di 'text'
template_builder.py,141,Assegna valore alla variabile 'lines'
template_builder.py,142,Verifica il flag 'not'
template_builder.py,143,Valuta l'espressione 'return '''
template_builder.py,144,Verifica il flag 'mode'
template_builder.py,145,Assegna valore alla variabile 'items'
template_builder.py,146,Valuta l'espressione 'return f'<ul>\n{items}\n</ul>''
template_builder.py,147,Verifica il flag 'mode'
template_builder.py,148,Valuta l'espressione 'return '\n'.join(f'<p>{ln}</p>' for ln in lines)'
template_builder.py,149,Restituisce il valore di 'text'
template_builder.py,151,Definisce la funzione 'images_to_html'
template_builder.py,153,Verifica il flag 'not'
template_builder.py,154,Valuta l'espressione 'return '''
template_builder.py,155,Valuta l'espressione 'html_lines: List[str] = []'
template_builder.py,156,Assegna valore alla variabile 'per'
template_builder.py,157,Assegna valore alla variabile 'width_pct'
template_builder.py,158,Itera con il ciclo 'for'
template_builder.py,159,Assegna valore alla variabile 'chunk'
template_builder.py,160,Verifica il flag 'len'
template_builder.py,161,Chiama il metodo 'append' su 'html_lines'
template_builder.py,162,Itera con il ciclo 'for'
template_builder.py,163,Verifica il flag 'src'
template_builder.py,164,Valuta l'espressione 'html_lines.append('
template_builder.py,165,"Genera il tag '<img>' con attributi 'src', 'alt' e stile di larghezza percentuale"
template_builder.py,166,Genera il tag '<img>' con stile di visualizzazione inline-block
template_builder.py,167,Valuta l'espressione ')'
template_builder.py,168,Chiama il metodo 'append' su 'html_lines'
template_builder.py,169,Gestisce il ramo 'else'
template_builder.py,170,Chiama il metodo 'append' su 'html_lines'
template_builder.py,171,Itera con il ciclo 'for'
template_builder.py,172,Verifica il flag 'src'
template_builder.py,173,Valuta l'espressione 'html_lines.append('
template_builder.py,174,Genera il tag '<img>' con attributi 'src' e 'alt' nella versione full-width
template_builder.py,175,Genera il tag '<img>' centrato con larghezza massima al 90 %
template_builder.py,176,Valuta l'espressione ')'
template_builder.py,177,Chiama il metodo 'append' su 'html_lines'
template_builder.py,178,Valuta l'espressione 'return '\n'.join(html_lines)'
template_builder.py,181,Definisce la classe 'MultiTextField'
template_builder.py,183,Valuta l'espressione 'Multi-line area:'
template_builder.py,184,Valuta l'espressione 'mode='ul'  → newline → <ul><li>..</li>'
template_builder.py,185,Valuta l'espressione 'mode='p'   → newline → <p>..</p>'
template_builder.py,187,Definisce la funzione '__init__'
template_builder.py,188,Chiama la funzione 'super'
template_builder.py,189,Valuta l'espressione 'self.mode = mode'
template_builder.py,190,Valuta l'espressione 'self.on_change = on_change'
template_builder.py,191,Chiama il metodo 'configure' su 'self'
template_builder.py,192,"Valuta l'espressione 'self.text.bind('<KeyRelease>', lambda e: self.on_change(), add='+')'"
template_builder.py,193,"Valuta l'espressione 'self.text.bind('<Control-v>', self._handle_paste, add='+')'"
template_builder.py,194,"Valuta l'espressione 'self.text.bind('<Command-v>', self._handle_paste, add='+')'"
template_builder.py,196,Definisce la funzione '_handle_paste'
template_builder.py,197,Avvia il blocco 'try'
template_builder.py,198,Assegna valore alla variabile 'clip'
template_builder.py,199,Gestisce il blocco 'except'
template_builder.py,200,Valuta l'espressione 'return 'break''
template_builder.py,201,Assegna valore alla variabile 'lines'
template_builder.py,202,Verifica il flag 'not'
template_builder.py,203,Valuta l'espressione 'return 'break''
template_builder.py,204,Itera con il ciclo 'for'
template_builder.py,205,"Valuta l'espressione 'self.text.insert(tk.INSERT, ln)'"
template_builder.py,206,Verifica il flag 'i'
template_builder.py,207,"Valuta l'espressione 'self.text.insert(tk.INSERT, '\n')'"
template_builder.py,208,Chiama il metodo 'on_change' su 'self'
template_builder.py,209,Valuta l'espressione 'return 'break''
template_builder.py,211,Definisce la funzione 'render_html'
template_builder.py,212,Assegna valore alla variabile 'txt'
template_builder.py,213,Verifica il flag 'not'
template_builder.py,214,Assegna valore alla variabile 'lines'
template_builder.py,215,Verifica il flag 'self'
template_builder.py,216,Restituisce una lista HTML '<ul>' con un elemento '<li>' per ogni riga
template_builder.py,217,Verifica il flag 'self'
template_builder.py,218,Restituisce una sequenza di paragrafi HTML '<p>' per ogni riga
template_builder.py,220,Definisce la classe 'ImageRepeaterField'
template_builder.py,222,Valuta l'espressione 'Ripetitore URL+ALT con:'
template_builder.py,223,Verifica il placeholder 'uniforme'
template_builder.py,224,Valuta l'espressione '- move up/down e delete per ogni riga'
template_builder.py,225,Valuta l'espressione '- validazione URL che ignora i placeholder'
template_builder.py,227,Definisce la funzione '__init__'
template_builder.py,228,Chiama la funzione 'super'
template_builder.py,229,Valuta l'espressione 'self.on_change = on_change'
template_builder.py,230,Valuta l'espressione 'self.rows: List[tk.Frame] = []'
template_builder.py,231,Assegna valore alla variabile 'hdr'
template_builder.py,232,Chiama il metodo 'pack' su 'hdr'
template_builder.py,233,Chiama il metodo 'Label' su 'ttk'
template_builder.py,234,Chiama il metodo 'Label' su 'ttk'
template_builder.py,235,Chiama il metodo 'Button' su 'ttk'
template_builder.py,237,Definisce la funzione '_mk_ph_entry'
template_builder.py,238,Assegna valore alla variabile 'ph'
template_builder.py,239,"Valuta l'espressione 'return PlaceholderEntry(master, placeholder=ph, width=width)'"
template_builder.py,241,Definisce la funzione 'add_row'
template_builder.py,242,Assegna valore alla variabile 'row'
template_builder.py,243,Assegna valore alla variabile 'e_url'
template_builder.py,244,Chiama il metodo 'pack' su 'e_url'
template_builder.py,245,Chiama il metodo 'bind' su 'e_url'
template_builder.py,246,Chiama il metodo 'bind' su 'e_url'
template_builder.py,247,Chiama il metodo 'bind' su 'e_url'
template_builder.py,248,Assegna valore alla variabile 'e_alt'
template_builder.py,249,Chiama il metodo 'pack' su 'e_alt'
template_builder.py,250,Chiama il metodo 'bind' su 'e_alt'
template_builder.py,251,Assegna valore alla variabile 'btn_up'
template_builder.py,252,Assegna valore alla variabile 'btn_down'
template_builder.py,253,Assegna valore alla variabile 'btn_del'
template_builder.py,254,Itera con il ciclo 'for'
template_builder.py,255,Chiama il metodo 'pack' su 'btn'
template_builder.py,256,Valuta l'espressione 'self.rows.append(row)'
template_builder.py,257,Chiama il metodo '_validate_and_notify' su 'self'
template_builder.py,259,Definisce la funzione '_smart_paste_urls'
template_builder.py,260,Avvia il blocco 'try'
template_builder.py,261,Assegna valore alla variabile 'clip'
template_builder.py,262,Gestisce il blocco 'except'
template_builder.py,263,Valuta l'espressione 'return 'break''
template_builder.py,264,Assegna valore alla variabile 'urls'
template_builder.py,265,Verifica il flag 'not'
template_builder.py,266,Valuta l'espressione 'return 'break''
template_builder.py,267,Chiama il metodo 'delete' su 'entry'
template_builder.py,268,Itera con il ciclo 'for'
template_builder.py,269,Chiama il metodo 'add_row' su 'self'
template_builder.py,270,Chiama il metodo 'on_change' su 'self'
template_builder.py,271,Valuta l'espressione 'return 'break''
template_builder.py,273,Definisce la funzione '_validate_and_notify'
template_builder.py,274,Assegna valore alla variabile 'url'
template_builder.py,275,Verifica il flag 'not'
template_builder.py,276,Chiama il metodo 'configure' su 'entry'
template_builder.py,277,Gestisce il ramo 'else'
template_builder.py,278,Avvia il blocco 'try'
template_builder.py,279,Chiama la funzione 'validate_image_url'
template_builder.py,280,Chiama il metodo 'configure' su 'entry'
template_builder.py,281,Gestisce l'eccezione 'ImageValidationError' come 'e'
template_builder.py,282,Chiama il metodo 'configure' su 'entry'
template_builder.py,283,Chiama la funzione 'show_warning'
template_builder.py,284,Verifica il flag 'entry'
template_builder.py,285,Chiama il metodo 'configure' su 'entry'
template_builder.py,286,Gestisce il ramo 'else'
template_builder.py,287,Chiama il metodo 'configure' su 'entry'
template_builder.py,288,Valuta l'espressione 'return self.on_change()'
template_builder.py,290,Definisce la funzione '_del'
template_builder.py,291,Chiama il metodo 'destroy' su 'row'
template_builder.py,293,Definisce la funzione '_move'
template_builder.py,294,Assegna valore alla variabile 'idx'
template_builder.py,295,Verifica una condizione con 'if'
template_builder.py,296,"Valuta l'espressione 'self.rows.pop(idx); self.rows.insert(new, row)'"
template_builder.py,297,Itera con il ciclo 'for'
template_builder.py,298,Chiama il metodo 'pack_forget' su 'r'
template_builder.py,300,Definisce la funzione 'get_rows'
template_builder.py,301,"Valuta l'espressione 'return [(r.winfo_children()[0].get().strip(), r.winfo_children()[1].get().strip())'"
template_builder.py,302,Itera con il ciclo 'for'
template_builder.py,305,Definisce la classe 'BuilderApp'
template_builder.py,306,Definisce la funzione '__init__'
template_builder.py,307,Chiama la funzione 'super'
template_builder.py,308,Chiama il metodo 'title' su 'self'
template_builder.py,309,Chiama il metodo 'geometry' su 'self'
template_builder.py,310,Chiama il metodo 'configure' su 'self'
template_builder.py,312,Valuta l'espressione 'self.cols_desc = tk.IntVar(value=2)'
template_builder.py,313,Valuta l'espressione 'self.cols_rec  = tk.IntVar(value=1)'
template_builder.py,314,"Valuta l'espressione 'self.fields: Dict[str, Union[MultiTextField, PlaceholderMultiTextField]] = {}'"
template_builder.py,315,Valuta l'espressione 'self.img_desc:  ImageRepeaterField | None = None'
template_builder.py,316,Valuta l'espressione 'self.img_rec:   ImageRepeaterField | None = None'
template_builder.py,317,Valuta l'espressione 'self.img_other: ImageRepeaterField | None = None'
template_builder.py,318,Valuta l'espressione 'self.preview_engine = None'
template_builder.py,320,Avvia il blocco 'try'
template_builder.py,321,Importa il simbolo 'Style' da 'ttkbootstrap'
template_builder.py,322,Chiama la funzione 'Style'
template_builder.py,323,Gestisce l'eccezione 'Exception'
template_builder.py,324,Valuta l'espressione 'pass'
template_builder.py,326,Chiama il metodo 'bind_all' su 'self'
template_builder.py,327,Chiama il metodo 'bind_all' su 'self'
template_builder.py,329,"Valuta l'espressione 'self.nb = ttk.Notebook(self); self.nb.pack(fill='both', expand=True, padx=8, pady=6)'"
template_builder.py,330,"Valuta l'espressione 'self.nb.bind('<<NotebookTabChanged>>', self._on_tab_change)'"
template_builder.py,331,Itera con il ciclo 'for'
template_builder.py,332,Chiama il metodo 'bind_all' su 'self'
template_builder.py,334,Assegna valore alla variabile 'top'
template_builder.py,335,Chiama il metodo 'Label' su 'ttk'
template_builder.py,336,Valuta l'espressione 'self.template_var = tk.StringVar()'
template_builder.py,337,"Valuta l'espressione 'self.cbo = styled_option_menu(top, self.template_var, []); self.cbo.pack(side='left', padx=6)'"
template_builder.py,338,Chiama il metodo 'Button' su 'ttk'
template_builder.py,340,Assegna valore alla variabile 'status'
template_builder.py,341,"Valuta l'espressione 'self.status = ttk.Label(status, text='Ready', anchor='w'); self.status.pack(side='left', fill='x', expand=True, padx=4)'"
template_builder.py,342,Chiama il metodo 'Button' su 'ttk'
template_builder.py,343,Valuta l'espressione 'self.detail_frame = ttk.Frame(self)'
template_builder.py,344,"Valuta l'espressione 'self.detail_label = ttk.Label(self.detail_frame, text='', anchor='w', justify='left', wraplength=1000)'"
template_builder.py,346,Chiama il metodo '_load_templates' su 'self'
template_builder.py,348,Definisce la funzione '_on_tab_change'
template_builder.py,349,Assegna valore alla variabile 'sel'
template_builder.py,350,Verifica il flag 'sel'
template_builder.py,351,Chiama la funzione 'show_warning'
template_builder.py,353,Definisce la funzione '_toggle_details'
template_builder.py,354,Verifica il flag 'self'
template_builder.py,355,Valuta l'espressione 'self.detail_frame.pack_forget()'
template_builder.py,356,Gestisce il ramo 'else'
template_builder.py,357,"Valuta l'espressione 'self.detail_frame.pack(fill='x'); self.detail_label.pack(fill='x', padx=8, pady=2)'"
template_builder.py,359,Definisce la funzione '_on_mousewheel'
template_builder.py,360,Avvia il blocco 'try'
template_builder.py,361,Assegna valore alla variabile 'frame'
template_builder.py,362,Gestisce l'eccezione 'Exception'
template_builder.py,363,Valuta l'espressione 'return'
template_builder.py,364,Definisce la funzione 'find_canvas'
template_builder.py,365,Verifica il flag 'isinstance'
template_builder.py,366,Restituisce il valore di 'w'
template_builder.py,367,Itera con il ciclo 'for'
template_builder.py,368,Assegna valore alla variabile 'f'
template_builder.py,369,Verifica il flag 'f'
template_builder.py,370,Restituisce il valore di 'f'
template_builder.py,371,Restituisce il valore di 'None'
template_builder.py,372,Assegna valore alla variabile 'canvas'
template_builder.py,373,Verifica il flag 'not'
template_builder.py,374,Valuta l'espressione 'return'
template_builder.py,375,Verifica il flag 'hasattr'
template_builder.py,376,Assegna valore alla variabile 'delta'
template_builder.py,377,Verifica una condizione con 'elif'
template_builder.py,378,Assegna valore alla variabile 'delta'
template_builder.py,379,Verifica una condizione con 'elif'
template_builder.py,380,Assegna valore alla variabile 'delta'
template_builder.py,381,Gestisce il ramo 'else'
template_builder.py,382,Valuta l'espressione 'return'
template_builder.py,383,Chiama il metodo 'yview_scroll' su 'canvas'
template_builder.py,385,Definisce la funzione '_make_scrollable'
template_builder.py,386,Assegna valore alla variabile 'wrapper'
template_builder.py,387,Assegna valore alla variabile 'canvas'
template_builder.py,388,Assegna valore alla variabile 'vsb'
template_builder.py,389,Chiama il metodo 'configure' su 'canvas'
template_builder.py,390,Chiama il metodo 'pack' su 'vsb'
template_builder.py,391,Assegna valore alla variabile 'inner'
template_builder.py,392,Chiama il metodo 'create_window' su 'canvas'
template_builder.py,393,Chiama il metodo 'bind' su 'inner'
template_builder.py,394,Restituisce il valore di 'inner'
template_builder.py,396,Definisce la funzione '_load_templates'
template_builder.py,397,Assegna valore alla variabile 'files'
template_builder.py,398,Assegna valore alla variabile 'menu'
template_builder.py,399,Itera con il ciclo 'for'
template_builder.py,400,Chiama il metodo 'add_command' su 'menu'
template_builder.py,401,Verifica il flag 'files'
template_builder.py,402,"Valuta l'espressione 'self.template_var.trace_add('write', lambda *_: self.reload_template())'"
template_builder.py,403,Valuta l'espressione 'self.template_var.set(files[0])'
template_builder.py,405,Definisce la funzione 'reload_template'
template_builder.py,407,Itera con il ciclo 'for'
template_builder.py,408,Valuta l'espressione 'self.nb.forget(tid)'
template_builder.py,409,Valuta l'espressione 'self.fields.clear()'
template_builder.py,410,Valuta l'espressione 'self.img_desc = self.img_rec = self.img_other = None'
template_builder.py,411,Valuta l'espressione 'self.preview_engine = None'
template_builder.py,414,Assegna valore alla variabile 'tpl_path'
template_builder.py,415,Verifica il flag 'not'
template_builder.py,416,Chiama la funzione 'show_error'
template_builder.py,417,Valuta l'espressione 'return'
template_builder.py,418,Valuta l'espressione 'self.template_src = tpl_path.read_text(encoding='utf-8')'
template_builder.py,419,Assegna valore alla variabile 'placeholders'
template_builder.py,422,Assegna valore alla variabile 'img_grps'
template_builder.py,423,Genera una lista con gli elementi di 'placeholders' tramite comprehension
template_builder.py,424,Verifica il flag 'f'
template_builder.py,425,Valuta l'espressione '}'
template_builder.py,426,Assegna valore alla variabile 'desc_groups'
template_builder.py,427,Assegna valore alla variabile 'rec_groups'
template_builder.py,428,Assegna valore alla variabile 'other_groups'
template_builder.py,431,Assegna valore alla variabile 'prod'
template_builder.py,432,Assegna valore alla variabile 'rec'
template_builder.py,433,Assegna valore alla variabile 'oth'
template_builder.py,434,Assegna valore alla variabile 'img_tab'
template_builder.py,437,Assegna valore alla variabile 'img_keys'
template_builder.py,438,Itera con il ciclo 'for'
template_builder.py,439,Verifica il flag 'key'
template_builder.py,440,Valuta l'espressione 'continue'
template_builder.py,441,Verifica il flag 'key'
template_builder.py,442,Assegna valori alle variabili 'parent' e altre
template_builder.py,443,Verifica una condizione con 'elif'
template_builder.py,444,Assegna valori alle variabili 'parent' e altre
template_builder.py,445,Gestisce il ramo 'else'
template_builder.py,446,Assegna valori alle variabili 'parent' e altre
template_builder.py,447,Chiama il metodo 'Label' su 'ttk'
template_builder.py,448,Assegna valore alla variabile 'fld'
template_builder.py,449,"Valuta l'espressione 'parent,'"
template_builder.py,450,Assegna valore alla variabile 'placeholder'
template_builder.py,451,Assegna valore alla variabile 'mode'
template_builder.py,452,Assegna valore alla variabile 'on_change'
template_builder.py,453,Valuta l'espressione ')'
template_builder.py,454,Chiama il metodo 'pack' su 'fld'
template_builder.py,455,Valuta l'espressione 'self.fields[key] = fld'
template_builder.py,458,Assegna valore alla variabile 'lf_h'
template_builder.py,459,Chiama il metodo 'pack' su 'lf_h'
template_builder.py,461,Assegna valore alla variabile 'e_hero_src'
template_builder.py,462,Chiama il metodo 'pack' su 'e_hero_src'
template_builder.py,464,Assegna valore alla variabile 'e_hero_alt'
template_builder.py,465,Chiama il metodo 'pack' su 'e_hero_alt'
template_builder.py,468,Itera con il ciclo 'for'
template_builder.py,469,Valuta l'espressione 'w.render_html = w.get'
template_builder.py,473,Valuta l'espressione 'self.fields['HERO_IMAGE_SRC'] = e_hero_src'
template_builder.py,474,Valuta l'espressione 'self.fields['HERO_IMAGE_ALT'] = e_hero_alt'
template_builder.py,478,Assegna valore alla variabile 'lf_d'
template_builder.py,479,Chiama il metodo 'pack' su 'lf_d'
template_builder.py,480,"Valuta l'espressione 'self.img_desc = ImageRepeaterField(lf_d, self.update_preview)'"
template_builder.py,481,"Valuta l'espressione 'self.img_desc.pack(fill='x', padx=6)'"
template_builder.py,482,Itera con il ciclo 'for'
template_builder.py,483,Chiama il metodo 'add_row' su 'self.img_desc' con placeholder 'SRC' e 'ALT'
template_builder.py,485,Assegna valore alla variabile 'lf_r'
template_builder.py,486,Chiama il metodo 'pack' su 'lf_r'
template_builder.py,487,"Valuta l'espressione 'self.img_rec = ImageRepeaterField(lf_r, self.update_preview)'"
template_builder.py,488,"Valuta l'espressione 'self.img_rec.pack(fill='x', padx=6)'"
template_builder.py,489,Itera con il ciclo 'for'
template_builder.py,490,Chiama il metodo 'add_row' su 'self.img_rec' con placeholder 'SRC' e 'ALT'
template_builder.py,493,Assegna valore alla variabile 'lf_s'
template_builder.py,494,Chiama il metodo 'pack' su 'lf_s'
template_builder.py,496,"Valuta l'espressione 'self.img_step = ImageRepeaterField(lf_s, self.update_preview)'"
template_builder.py,497,"Valuta l'espressione 'self.img_step.pack(fill='x', padx=6)'"
template_builder.py,500,Itera con il ciclo 'for'
template_builder.py,501,Chiama il metodo 'add_row' su 'self.img_step' con placeholder dinamico 'STEP{n}_IMG_SRC'
template_builder.py,502,Assegna valore alla variabile 'alt'
template_builder.py,505,Assegna valore alla variabile 'ctrl'
template_builder.py,506,Chiama il metodo 'pack' su 'ctrl'
template_builder.py,507,Chiama il metodo 'Label' su 'ttk'
template_builder.py,508,Chiama la funzione 'styled_spinbox'
template_builder.py,509,Assegna valore alla variabile 'textvariable'
template_builder.py,510,Assegna valore alla variabile 'command'
template_builder.py,511,Assegna valore alla variabile 'width'
template_builder.py,512,Chiama il metodo 'Label' su 'ttk'
template_builder.py,513,Chiama la funzione 'styled_spinbox'
template_builder.py,514,Assegna valore alla variabile 'textvariable'
template_builder.py,515,Assegna valore alla variabile 'command'
template_builder.py,516,Assegna valore alla variabile 'width'
template_builder.py,519,Assegna valore alla variabile 'prev'
template_builder.py,520,Verifica il flag 'PreviewEngine'
template_builder.py,521,Valuta l'espressione 'self.preview_engine = PreviewEngine(prev)'
template_builder.py,522,Assegna valore alla variabile 'frame'
template_builder.py,523,Chiama il metodo 'pack' su 'frame'
template_builder.py,524,Gestisce il ramo 'else'
template_builder.py,526,Assegna valore alla variabile 'txt'
template_builder.py,527,Chiama il metodo 'insert' su 'txt'
template_builder.py,528,Chiama il metodo 'pack' su 'txt'
template_builder.py,531,Valuta l'espressione 'audit_lines: List[str] = []'
template_builder.py,532,Itera con il ciclo 'for'
template_builder.py,533,Assegna valore alla variabile 'grp'
template_builder.py,534,Assegna valore alla variabile 'handled'
template_builder.py,535,Valuta l'espressione 'ph in self.fields'
template_builder.py,536,Valuta l'espressione 'or grp in desc_groups'
template_builder.py,537,Valuta l'espressione 'or grp in rec_groups'
template_builder.py,538,Chiama la funzione 'or'
template_builder.py,539,Valuta l'espressione ')'
template_builder.py,540,Assegna valore alla variabile 'symbol'
template_builder.py,541,Chiama il metodo 'append' su 'audit_lines'
template_builder.py,542,Chiama la funzione 'show_info'
template_builder.py,543,"Valuta l'espressione ''Verifica segnaposti','"
template_builder.py,544,Genera la stringa di audit dei placeholder per il template '{self.template_var.get()}'
template_builder.py,545,Aggiorna il widget di output con la stringa di audit 'audit_lines'
template_builder.py,546,Valuta l'espressione ')'
template_builder.py,549,Valuta l'espressione 'self.detail_frame.pack_forget()'
template_builder.py,550,Chiama il metodo 'update_preview' su 'self'
template_builder.py,553,Definisce la funzione '_add_tab'
template_builder.py,554,Assegna valore alla variabile 'f'
template_builder.py,555,"Valuta l'espressione 'self.nb.add(f, text=title)'"
template_builder.py,556,Restituisce il valore di 'f'
template_builder.py,558,Definisce la funzione '_collect'
template_builder.py,559,"Valuta l'espressione 'data: Dict[str, Union[str,List]] = {}'"
template_builder.py,560,Itera con il ciclo 'for'
template_builder.py,561,Valuta l'espressione 'data[k] = w.render_html()'
template_builder.py,562,Assegna valore alla variabile 'desc'
template_builder.py,563,Assegna valore alla variabile 'rec'
template_builder.py,564,Valuta l'espressione 'data['IMAGES_DESC']      = desc'
template_builder.py,565,Valuta l'espressione 'data['IMAGES_REC']       = rec'
template_builder.py,566,Assegna valore alla variabile 'step'
template_builder.py,567,Valuta l'espressione 'data['IMAGES_STEP']      = step'
template_builder.py,568,Valuta l'espressione 'data['COLS_DESC']        = self.cols_desc.get()'
template_builder.py,569,Valuta l'espressione 'data['COLS_REC']         = self.cols_rec.get()'
template_builder.py,570,"Valuta l'espressione 'data['IMAGES_DESC_HTML'] = images_to_html(desc, self.cols_desc.get())'"
template_builder.py,571,"Valuta l'espressione 'data['IMAGES_REC_HTML']  = images_to_html(rec,  self.cols_rec.get())'"
template_builder.py,572,Restituisce il valore di 'data'
template_builder.py,574,Definisce la funzione 'update_preview'
template_builder.py,575,Assegna valore alla variabile 'ctx'
template_builder.py,576,Assegna valore alla variabile 'raw'
template_builder.py,577,Assegna valore alla variabile 'low'
template_builder.py,578,Assegna valore alla variabile 'html'
template_builder.py,579,Verifica il flag 'low'
template_builder.py,580,Genera il markup di fallback '<!DOCTYPE html>' quando il template è vuoto
template_builder.py,581,Valuta l'espressione '+ raw + '</body></html>')'
template_builder.py,583,Avvia il blocco 'try'
template_builder.py,584,"Valuta l'espressione 'self.html_text.text.delete('1.0', 'end')'"
template_builder.py,585,"Valuta l'espressione 'self.html_text.text.insert('1.0', html)'"
template_builder.py,586,Gestisce l'eccezione 'AttributeError'
template_builder.py,587,Valuta l'espressione 'pass'
template_builder.py,589,Assegna valore alla variabile 'missing'
template_builder.py,590,Assegna valore alla variabile 'empty'
template_builder.py,591,Verifica il flag 'missing'
template_builder.py,592,Valuta l'espressione 'parts: List[str] = []'
template_builder.py,593,Verifica il flag 'missing'
template_builder.py,594,Chiama il metodo 'append' su 'parts'
template_builder.py,595,Verifica il flag 'empty'
template_builder.py,596,Chiama il metodo 'append' su 'parts'
template_builder.py,597,Valuta l'espressione 'self.status.config(text='')'
template_builder.py,598,Valuta l'espressione 'self.detail_label.config(text='\n'.join(parts))'
template_builder.py,599,Verifica il flag 'not'
template_builder.py,600,"Valuta l'espressione 'self.detail_frame.pack(fill='x'); self.detail_label.pack(fill='x', padx=8, pady=2)'"
template_builder.py,601,Gestisce il ramo 'else'
template_builder.py,602,"Valuta l'espressione 'self.status.config(text='Tutti i segnaposti popolati ✓', foreground='#5cb85c')'"
template_builder.py,603,Valuta l'espressione 'self.detail_frame.pack_forget()'
template_builder.py,605,Verifica il flag 'self'
template_builder.py,606,Valuta l'espressione 'self.preview_engine.render(html)'
template_builder.py,608,Definisce la funzione '_quick_save'
template_builder.py,609,Assegna valore alla variabile 'ctx'
template_builder.py,610,Assegna valore alla variabile 'raw'
template_builder.py,611,Assegna valore alla variabile 'missing'
template_builder.py,612,Assegna valore alla variabile 'empty'
template_builder.py,613,Verifica il flag 'missing'
template_builder.py,614,Valuta l'espressione 'msgs: List[str] = []'
template_builder.py,615,Verifica il flag 'missing'
template_builder.py,616,Verifica il flag 'empty'
template_builder.py,617,Chiama la funzione 'show_warning'
template_builder.py,618,Valuta l'espressione 'return'
template_builder.py,619,Assegna valore alla variabile 'base'
template_builder.py,620,Assegna valore alla variabile 'ts'
template_builder.py,621,Assegna valore alla variabile 'html_path'
template_builder.py,622,Assegna valore alla variabile 'json_path'
template_builder.py,623,Chiama il metodo 'write_text' su 'html_path'
template_builder.py,624,Chiama il metodo 'write_text' su 'json_path'
template_builder.py,625,Chiama la funzione 'show_info'
template_builder.py,627,Verifica il flag '__name__'
template_builder.py,628,Chiama la funzione 'BuilderApp'
test_placeholders.py,2,Importa il modulo 'unittest'
test_placeholders.py,3,Importa il modulo 'tkinter'
test_placeholders.py,4,Importa il simbolo 'PlaceholderEntry' da 'ui_utils'
test_placeholders.py,6,Definisce la classe 'TestPlaceholders'
test_placeholders.py,7,Definisce la funzione 'setUp'
test_placeholders.py,8,Valuta l'espressione 'self.root = tk.Tk()'
test_placeholders.py,9,Valuta l'espressione 'self.root.withdraw()'
test_placeholders.py,11,Definisce la funzione 'tearDown'
test_placeholders.py,12,Valuta l'espressione 'self.root.destroy()'
test_placeholders.py,14,Definisce la funzione 'test_entry_placeholder_initial'
test_placeholders.py,15,Assegna valore alla variabile 'ph'
test_placeholders.py,16,Assegna valore alla variabile 'e'
test_placeholders.py,17,Chiama il metodo 'pack' su 'e'
test_placeholders.py,18,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,19,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,20,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,22,Definisce la funzione 'test_entry_focus_in_out'
test_placeholders.py,23,Assegna valore alla variabile 'ph'
test_placeholders.py,24,Assegna valore alla variabile 'e'
test_placeholders.py,25,Chiama il metodo 'pack' su 'e'
test_placeholders.py,26,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,27,Chiama il metodo 'event_generate' su 'e'
test_placeholders.py,28,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,29,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,30,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,31,Chiama il metodo 'event_generate' su 'e'
test_placeholders.py,32,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,33,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,34,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,36,Definisce la funzione 'test_spinbox_placeholder_initial'
test_placeholders.py,37,Assegna valore alla variabile 'ph'
test_placeholders.py,38,Assegna valore alla variabile 'sb'
test_placeholders.py,39,Chiama il metodo 'pack' su 'sb'
test_placeholders.py,40,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,41,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,42,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,44,Definisce la funzione 'test_spinbox_focus_in_out'
test_placeholders.py,45,Assegna valore alla variabile 'ph'
test_placeholders.py,46,Assegna valore alla variabile 'sb'
test_placeholders.py,47,Chiama il metodo 'pack' su 'sb'
test_placeholders.py,48,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,49,Chiama il metodo 'event_generate' su 'sb'
test_placeholders.py,50,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,51,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,52,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,53,Chiama il metodo 'event_generate' su 'sb'
test_placeholders.py,54,Valuta l'espressione 'self.root.update_idletasks()'
test_placeholders.py,55,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,56,Chiama il metodo 'assertEqual' su 'self'
test_placeholders.py,58,Verifica il flag '__name__'
test_placeholders.py,59,Chiama il metodo 'main' su 'unittest'
ui_utils.py,3,Importa il modulo 'tkinter'
ui_utils.py,4,Importa il simbolo 'ttk' da 'tkinter'
ui_utils.py,5,Importa il simbolo 'messagebox' da 'tkinter'
ui_utils.py,6,Importa il simbolo 'Callable' da 'typing'
ui_utils.py,9,Avvia il blocco 'try'
ui_utils.py,10,Importa il simbolo 'Style' da 'ttkbootstrap'
ui_utils.py,11,Gestisce l'eccezione 'ImportError'
ui_utils.py,12,Assegna valore alla variabile 'Style'
ui_utils.py,15,Avvia il blocco 'try'
ui_utils.py,16,Importa il simbolo 'Messagebox' da 'ttkbootstrap.dialogs.dialogs'
ui_utils.py,17,Assegna valore alla variabile '_HAS_TB_DIALOG'
ui_utils.py,18,Gestisce il blocco 'except'
ui_utils.py,19,Assegna valore alla variabile '_HAS_TB_DIALOG'
ui_utils.py,22,Definisce la funzione 'styled_option_menu'
ui_utils.py,23,Assegna valore alla variabile 'style'
ui_utils.py,24,Verifica il flag 'Style'
ui_utils.py,25,Chiama la funzione 'Style'
ui_utils.py,26,Assegna valore alla variabile 'om'
ui_utils.py,27,Restituisce il valore di 'om'
ui_utils.py,30,Definisce la funzione 'styled_spinbox'
ui_utils.py,31,Assegna valore alla variabile 'sb'
ui_utils.py,32,"Valuta l'espressione 'master,'"
ui_utils.py,33,Assegna valore alla variabile 'from_'
ui_utils.py,34,Assegna valore alla variabile 'to'
ui_utils.py,35,Assegna valore alla variabile 'textvariable'
ui_utils.py,36,Assegna valore alla variabile 'command'
ui_utils.py,37,Valuta l'espressione '**kwargs'
ui_utils.py,38,Valuta l'espressione ')'
ui_utils.py,39,Avvia il blocco 'try'
ui_utils.py,40,Chiama il metodo 'config' su 'sb'
ui_utils.py,41,Gestisce il blocco 'except'
ui_utils.py,42,Valuta l'espressione 'pass'
ui_utils.py,43,Restituisce il valore di 'sb'
ui_utils.py,46,Definisce la funzione 'show_info'
ui_utils.py,47,Verifica il flag '_HAS_TB_DIALOG'
ui_utils.py,48,Chiama il metodo 'show_info' su '_TBMessagebox'
ui_utils.py,49,Gestisce il ramo 'else'
ui_utils.py,50,Chiama il metodo 'showinfo' su '_tk_messagebox'
ui_utils.py,53,Definisce la funzione 'show_warning'
ui_utils.py,54,Verifica il flag '_HAS_TB_DIALOG'
ui_utils.py,55,Chiama il metodo 'show_warning' su '_TBMessagebox'
ui_utils.py,56,Gestisce il ramo 'else'
ui_utils.py,57,Chiama il metodo 'showwarning' su '_tk_messagebox'
ui_utils.py,60,Definisce la funzione 'show_error'
ui_utils.py,61,Verifica il flag '_HAS_TB_DIALOG'
ui_utils.py,62,Chiama il metodo 'show_error' su '_TBMessagebox'
ui_utils.py,63,Gestisce il ramo 'else'
ui_utils.py,64,Chiama il metodo 'showerror' su '_tk_messagebox'
ui_utils.py,67,Definisce la classe 'StyledText'
ui_utils.py,68,Definisce la funzione '__init__'
ui_utils.py,69,Chiama la funzione 'super'
ui_utils.py,70,"Valuta l'espressione 'self.text = tk.Text(self, **kwargs)'"
ui_utils.py,71,"Valuta l'espressione 'self.vsb = ttk.Scrollbar(self, orient='vertical', command=self.text.yview)'"
ui_utils.py,72,Valuta l'espressione 'self.text.configure(yscrollcommand=self.vsb.set)'
ui_utils.py,73,"Valuta l'espressione 'self.vsb.pack(side='right', fill='y')'"
ui_utils.py,74,"Valuta l'espressione 'self.text.pack(side='left', fill='both', expand=True)'"
ui_utils.py,76,Definisce la funzione 'get'
ui_utils.py,77,Valuta l'espressione 'return self.text.get(*args)'
ui_utils.py,79,Definisce la funzione 'insert'
ui_utils.py,80,Valuta l'espressione 'return self.text.insert(*args)'
ui_utils.py,82,Definisce la funzione 'bind'
ui_utils.py,83,"Valuta l'espressione 'return self.text.bind(*args, **kwargs)'"
ui_utils.py,85,Definisce la funzione 'config'
ui_utils.py,86,Valuta l'espressione 'return self.text.config(**kwargs)'
ui_utils.py,88,Definisce la funzione 'delete'
ui_utils.py,89,Valuta l'espressione 'return self.text.delete(*args)'
ui_utils.py,92,Definisce la classe 'PlaceholderEntry'
ui_utils.py,93,Definisce la funzione '__init__'
ui_utils.py,94,Chiama la funzione 'super'
ui_utils.py,95,Valuta l'espressione 'self.placeholder = placeholder'
ui_utils.py,96,Valuta l'espressione 'self.default_fg = self.cget('foreground')'
ui_utils.py,97,Chiama il metodo 'bind' su 'self'
ui_utils.py,98,Chiama il metodo 'bind' su 'self'
ui_utils.py,99,Chiama il metodo '_add_placeholder' su 'self'
ui_utils.py,101,Definisce la funzione '_clear_placeholder'
ui_utils.py,102,Verifica il flag 'self'
ui_utils.py,103,Chiama il metodo 'delete' su 'self'
ui_utils.py,104,Chiama il metodo 'config' su 'self'
ui_utils.py,106,Definisce la funzione '_add_placeholder'
ui_utils.py,107,Verifica il flag 'not'
ui_utils.py,108,Chiama il metodo 'insert' su 'self'
ui_utils.py,109,Chiama il metodo 'config' su 'self'
ui_utils.py,110,Gestisce il ramo 'else'
ui_utils.py,111,Chiama il metodo 'config' su 'self'
ui_utils.py,115,Definisce la funzione 'smart_paste'
ui_utils.py,116,Verifica il flag 'not'
ui_utils.py,117,Valuta l'espressione 'return []'
ui_utils.py,118,Assegna valore alla variabile 'lines'
ui_utils.py,119,Verifica il flag 'len'
ui_utils.py,120,Valuta l'espressione 'return [s.strip() for s in lines[0].split(';') if s.strip()]'
ui_utils.py,121,Restituisce il valore di 'lines'
ui_utils.py,124,Definisce la classe 'PlaceholderMultiTextField'
ui_utils.py,126,Verifica il placeholder 'che'
ui_utils.py,127,Valuta l'espressione 'mantiene smart-paste e on_change binding.'
ui_utils.py,129,Definisce la funzione '__init__'
ui_utils.py,130,"Valuta l'espressione 'on_change: Callable[[], None], **kwargs):'"
ui_utils.py,131,Chiama la funzione 'super'
ui_utils.py,132,Valuta l'espressione 'self.mode = mode'
ui_utils.py,133,Valuta l'espressione 'self.on_change = on_change'
ui_utils.py,134,Valuta l'espressione 'self.placeholder = placeholder'
ui_utils.py,135,Valuta l'espressione 'self.default_fg = self.text.cget('foreground')'
ui_utils.py,138,"Valuta l'espressione 'self.text.bind('<FocusIn>', self._clear_placeholder, add='+')'"
ui_utils.py,139,"Valuta l'espressione 'self.text.bind('<FocusOut>', self._add_placeholder, add='+')'"
ui_utils.py,142,"Valuta l'espressione 'self.text.bind('<KeyRelease>', lambda e: self.on_change(), add='+')'"
ui_utils.py,143,"Valuta l'espressione 'self.text.bind('<Control-v>', self._handle_paste, add='+')'"
ui_utils.py,144,"Valuta l'espressione 'self.text.bind('<Command-v>', self._handle_paste, add='+')'"
ui_utils.py,147,Chiama il metodo '_add_placeholder' su 'self'
ui_utils.py,149,Definisce la funzione '_clear_placeholder'
ui_utils.py,150,Verifica il flag 'self'
ui_utils.py,151,"Valuta l'espressione 'self.text.delete('1.0', 'end')'"
ui_utils.py,152,Valuta l'espressione 'self.text.config(foreground=self.default_fg)'
ui_utils.py,154,Definisce la funzione '_add_placeholder'
ui_utils.py,155,Verifica il flag 'not'
ui_utils.py,156,"Valuta l'espressione 'self.text.insert('1.0', self.placeholder)'"
ui_utils.py,157,Valuta l'espressione 'self.text.config(foreground='grey')'
ui_utils.py,158,Gestisce il ramo 'else'
ui_utils.py,159,Valuta l'espressione 'self.text.config(foreground=self.default_fg)'
ui_utils.py,161,Definisce la funzione '_handle_paste'
ui_utils.py,162,Avvia il blocco 'try'
ui_utils.py,163,Assegna valore alla variabile 'clip'
ui_utils.py,164,Gestisce il blocco 'except'
ui_utils.py,165,Valuta l'espressione 'return 'break''
ui_utils.py,167,Verifica il flag 'self'
ui_utils.py,168,"Valuta l'espressione 'self.text.delete('1.0', 'end')'"
ui_utils.py,169,Assegna valore alla variabile 'lines'
ui_utils.py,170,Verifica il flag 'not'
ui_utils.py,171,Valuta l'espressione 'return 'break''
ui_utils.py,172,Itera con il ciclo 'for'
ui_utils.py,173,"Valuta l'espressione 'self.text.insert(tk.INSERT, ln)'"
ui_utils.py,174,Verifica il flag 'i'
ui_utils.py,175,"Valuta l'espressione 'self.text.insert(tk.INSERT, '\n')'"
ui_utils.py,176,Chiama il metodo 'on_change' su 'self'
ui_utils.py,177,Valuta l'espressione 'return 'break''
ui_utils.py,179,Definisce la funzione 'render_html'
ui_utils.py,181,Valuta l'espressione 'Restituisce il contenuto del widget per il rendering.'
ui_utils.py,183,"Valuta l'espressione 'return self.text.get('1.0', 'end').rstrip()'"
validators.py,1,Importa il modulo 'requests'
validators.py,2,Importa il simbolo 'BytesIO' da 'io'
validators.py,3,Importa il simbolo 'Image' da 'PIL'
validators.py,6,Assegna valore alla variabile 'REQUEST_TIMEOUT'
validators.py,8,Definisce la classe 'ImageValidationError'
validators.py,10,Valuta l'espressione 'pass'
validators.py,12,Definisce la funzione 'validate_image_url'
validators.py,14,Valuta l'espressione 'Controlla che l'URL punti a un'immagine valida.'
validators.py,15,Valuta l'espressione '- Scarica interamente i dati con timeout.'
validators.py,16,Valuta l'espressione '- Tenta di aprirli come immagine PIL.'
validators.py,18,Avvia il blocco 'try'
validators.py,19,Assegna valore alla variabile 'resp'
validators.py,20,Chiama il metodo 'raise_for_status' su 'resp'
validators.py,21,Assegna valore alla variabile 'data'
validators.py,23,Chiama il metodo 'open' su 'Image'
validators.py,24,Gestisce il blocco 'except'
validators.py,25,Genera l'eccezione 'ImageValidationError' per errore di download
validators.py,26,Gestisce il blocco 'except'
validators.py,27,Genera l'eccezione 'ImageValidationError' perché il contenuto non è un'immagine
validators.py,29,Restituisce il valore di 'True'
